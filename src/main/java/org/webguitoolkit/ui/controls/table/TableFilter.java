/*
Copyright 2008 Endress+Hauser Infoserve GmbH&Co KG 
Licensed under the Apache License, Version 2.0 (the "License"); 
you may not use this file except in compliance with the License. 
You may obtain a copy of the License at 

http://www.apache.org/licenses/LICENSE-2.0 

Unless required by applicable law or agreed to in writing, software 
distributed under the License is distributed on an "AS IS" BASIS, 
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or 
implied. See the License for the specific language governing permissions 
and limitations under the License.
*/ 
/*
 */
package org.webguitoolkit.ui.controls.table;

import java.io.PrintWriter;

import org.webguitoolkit.ui.base.WGTException;
import org.webguitoolkit.ui.controls.BaseControl;
import org.webguitoolkit.ui.controls.form.ICompound;
import org.webguitoolkit.ui.controls.form.ISelectModel;
import org.webguitoolkit.ui.controls.form.Select;
import org.webguitoolkit.ui.controls.util.TextService;


/**
 * <pre>
 * context binding: component: s<id> selected option: (., <key>, TYPE_VAL )
 * options: (.o<key>, <display text>, TYPE_TXT) (.o<key>, <value>, TYPE_VAL)
 * achtung hier werden 2 werte übertrgen zu einem key. clearoptions: (.clear,
 * <number of options>, TYPE_CLROPT )
 * 
 * Using the AssociationfilerModel (by setting the parameter ref) really does only
 * make sense if you are using the PushTableModel in the table. see the PushTableModel
 * for more info.
 * </pre>
 * 
 * @author arno
 */
public class TableFilter extends Select implements ITableFilter {
    
    // if set, holds the reference property and uses AssociationModel
    protected String ref; 
	protected String label;

    /**
     * @see org.webguitoolkit.ui.controls.BaseControl#BaseControl()
     */
    public TableFilter() {
		super();
	}

    /**
     * @see org.webguitoolkit.ui.controls.BaseControl#BaseControl(String)
     * @param id unique HTML id
     */
	public TableFilter(String id) {
		super(id);
	}

	protected void endHTML(PrintWriter out) {
        // output generated by table
    }

	public void setParent(BaseControl parent) {
        parentInternal(parent);
    }

    public ICompound surroundingCompound() {
        throw new WGTException("No Surrounding Compound for Table Filter!");
    }

	public String getRef() {
		return ref;
	}

	public ISelectModel getModel() {
		if (model==null && getRef()!=null) {
			model = new AssociationFilterModel(ref);
			return model;
		} else
			return super.getModel();
	}

	public void setRef(String ref) {
		this.ref = ref;
	}

	public String getPrompt() {
		if (super.getPrompt()==null)
			return TextService.getString("general.all@All");
		else
			return super.getPrompt();
	}

	public String getLabel() {
		return label;
	}

	public void setLabel(String label) {
		this.label = label;
	}
	public void setLabelKey(String labelKey) {
		this.label = TextService.getString( labelKey );
	}

}
